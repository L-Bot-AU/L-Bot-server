# TODO impl:
#  Use rooms to determine who to send to?
#   - Ryan: str/flag to determine which pg user is on
#   - Cyril: create 2 ports
#  1. Snr/Jnr Count: used for home pg
#   - Server side emits once upon establishing connection
#       Client can emit sth back optionally (maybe not)?
#   - Server -> Client emit upon ryan update
#       Client shouldn't emit anything back because the server-side will get spammed
#       Client side updates innerhtml vaule
#  2. Snr/Jnr Predictions: used for trends pg
#   - Client requests once upon loading pg
#   - yea sure idk

import socketio
import eventlet
import time

TIMEOUT = 3 # 3 seconds before each dynamicdata update

sio = socketio.Server(cors_allowed_origins="*")
app = socketio.WSGIApp(sio)

@sio.event
def connect(sid, environ):
    print("connect ", sid)
    while True:
        sio.emit("prediction", ("snr", get_predictions("snr")))
        sio.emit("prediction", ("snr", get_predictions("jnr")))
        time.sleep(TIMEOUT)

@sio.on("staticdata")
def staticdata(sid):
    print("Count req received") # but shouldn't actually be receiving requests in production
    sio.send("countUpd", ("snr", str(count("snr"))))
    sio.send("countUpd", ("jnr", str(count("jnr"))))

@sio.event
def disconnect(sid):
    print("disconnect ", sid)

eventlet.wsgi.server(eventlet.listen(('', 2910)), app)
